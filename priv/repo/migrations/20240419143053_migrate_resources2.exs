defmodule Vachan.Repo.Migrations.MigrateResources2 do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    alter table(:users) do
      add :confirmed_at, :utc_datetime_usec
      add :tenant_id, :uuid
    end

    create table(:tenants, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
    end

    alter table(:users) do
      modify :tenant_id,
             references(:tenants,
               column: :id,
               name: "users_tenant_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:tenants) do
      add :name, :text, null: false
      add :subdomain, :text, null: false
      add :created_at, :utc_datetime, null: false
      add :updated_at, :utc_datetime, null: false
    end

    create unique_index(:tenants, [:subdomain], name: "tenants_unique_subdomain_index")

    create table(:profiles, primary_key: false) do
      add :id,
          references(:users, column: :id, name: "profiles_id_fkey", type: :uuid, prefix: "public"),
          primary_key: true,
          null: false

      add :name, :text, null: false
    end
  end

  def down do
    drop constraint(:profiles, "profiles_id_fkey")

    drop table(:profiles)

    drop_if_exists unique_index(:tenants, [:subdomain], name: "tenants_unique_subdomain_index")

    alter table(:tenants) do
      remove :updated_at
      remove :created_at
      remove :subdomain
      remove :name
    end

    drop constraint(:users, "users_tenant_id_fkey")

    alter table(:users) do
      modify :tenant_id, :uuid
    end

    drop table(:tenants)

    alter table(:users) do
      remove :tenant_id
      remove :confirmed_at
    end
  end
end
