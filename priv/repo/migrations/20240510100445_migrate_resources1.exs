defmodule Vachan.Repo.Migrations.MigrateResources1 do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:users, primary_key: false) do
      add :confirmed_at, :utc_datetime_usec
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
      add :email, :citext, null: false
      add :hashed_password, :text, null: false
    end

    create unique_index(:users, [:email], name: "users_unique_email_index")

    create table(:tokens, primary_key: false) do
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :created_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :extra_data, :map
      add :purpose, :text, null: false
      add :expires_at, :utc_datetime, null: false
      add :subject, :text, null: false
      add :jti, :text, null: false, primary_key: true
    end

    create table(:templates, primary_key: false) do
      add :id, :bigserial, null: false, primary_key: true
      add :name, :text, null: false
      add :subject, :text, null: false
      add :text_body, :text, null: false
      add :html_body, :text, null: false
      add :created_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")
    end

    create table(:teams, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
      add :role, :text, null: false, default: "member"
      add :created_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")

      add :member_id,
          references(:users,
            column: :id,
            name: "teams_member_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          primary_key: true,
          null: false

      add :organization_id, :uuid, null: false, primary_key: true
    end

    create table(:subscribers, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
      add :email, :citext, null: false
      add :name, :text, null: false
      add :join_beta_tester, :boolean, null: false, default: false
      add :subscribe_newsletter, :boolean, null: false, default: false
      add :created_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")
    end

    create unique_index(:subscribers, [:email], name: "subscribers_unique_email_index")

    create table(:sender_profiles, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
      add :provider, :text, null: false, default: "smtp"
      add :username, :text
      add :password, :text
      add :api_key, :text
      add :smtp_host, :text
      add :smtp_port, :text
      add :name, :text, null: false
      add :email, :citext, null: false
      add :title, :text, null: false
      add :organization_id, :uuid
    end

    create table(:profiles, primary_key: false) do
      add :id,
          references(:users, column: :id, name: "profiles_id_fkey", type: :uuid, prefix: "public"),
          primary_key: true,
          null: false

      add :name, :text, null: false
    end

    create table(:people, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
      add :first_name, :text, null: false
      add :last_name, :text, null: false
      add :email, :citext, null: false
      add :phone, :text
      add :city, :text
      add :state, :text
      add :country, :text
      add :designation, :text
      add :company, :text
      add :tags, :text
      add :created_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :organization_id, :uuid
    end

    create table(:organizations, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
    end

    alter table(:teams) do
      modify :organization_id,
             references(:organizations,
               column: :id,
               name: "teams_organization_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:sender_profiles) do
      modify :organization_id,
             references(:organizations,
               column: :id,
               name: "sender_profiles_organization_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    create unique_index(:sender_profiles, [:organization_id, :title],
             name: "sender_profiles_unique_name_index"
           )

    alter table(:people) do
      modify :organization_id,
             references(:organizations,
               column: :id,
               name: "people_organization_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    create unique_index(:people, [:organization_id, :email], name: "people_unique_email_index")

    alter table(:organizations) do
      add :name, :text, null: false
      add :created_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")
    end

    create table(:messages, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
      add :subject, :text, null: false
      add :body, :text, null: false
      add :status, :text, null: false, default: "created"
      add :created_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :campaign_id, :bigint
      add :recepient_id, :uuid
    end

    create table(:massmail_events, primary_key: false) do
      add :id, :bigserial, null: false, primary_key: true
      add :type, :text, null: false
      add :created_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")

      add :message_id,
          references(:messages,
            column: :id,
            name: "massmail_events_message_id_fkey",
            type: :uuid,
            prefix: "public"
          )
    end

    create table(:crm_people_lists, primary_key: false) do
      add :person_id,
          references(:people,
            column: :id,
            name: "crm_people_lists_person_id_fkey",
            type: :uuid,
            prefix: "public",
            on_delete: :delete_all
          ),
          primary_key: true,
          null: false

      add :list_id, :bigint, null: false, primary_key: true
    end

    create table(:crm_lists, primary_key: false) do
      add :id, :bigserial, null: false, primary_key: true
    end

    alter table(:crm_people_lists) do
      modify :list_id,
             references(:crm_lists,
               column: :id,
               name: "crm_people_lists_list_id_fkey",
               type: :bigint,
               prefix: "public",
               on_delete: :delete_all
             )
    end

    alter table(:crm_lists) do
      add :name, :text, null: false
      add :created_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")

      add :organization_id,
          references(:organizations,
            column: :id,
            name: "crm_lists_organization_id_fkey",
            type: :uuid,
            prefix: "public"
          )
    end

    create unique_index(:crm_lists, [:organization_id, :name],
             name: "crm_lists_unique_list_name_index"
           )

    create table(:campaigns, primary_key: false) do
      add :id, :bigserial, null: false, primary_key: true
    end

    alter table(:messages) do
      modify :campaign_id,
             references(:campaigns,
               column: :id,
               name: "messages_campaign_id_fkey",
               type: :bigint,
               prefix: "public"
             )

      modify :recepient_id,
             references(:people,
               column: :id,
               name: "messages_recepient_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:campaigns) do
      add :name, :text, null: false
      add :active?, :boolean, null: false, default: true
      add :deleted?, :boolean, null: false, default: false
      add :created_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")

      add :list_id,
          references(:crm_lists,
            column: :id,
            name: "campaigns_list_id_fkey",
            type: :bigint,
            prefix: "public"
          )

      add :organization_id,
          references(:organizations,
            column: :id,
            name: "campaigns_organization_id_fkey",
            type: :uuid,
            prefix: "public"
          )

      add :sender_profile_id,
          references(:sender_profiles,
            column: :id,
            name: "campaigns_sender_profile_id_fkey",
            type: :uuid,
            prefix: "public"
          )

      add :state, :text, null: false, default: "new"
    end

    create table(:campaign_recepients, primary_key: false) do
      add :id, :bigserial, null: false, primary_key: true
      add :blob, :text

      add :campaign_id,
          references(:campaigns,
            column: :id,
            name: "campaign_recepients_campaign_id_fkey",
            type: :bigint,
            prefix: "public"
          )

      add :organization_id,
          references(:organizations,
            column: :id,
            name: "campaign_recepients_organization_id_fkey",
            type: :uuid,
            prefix: "public"
          )
    end

    create table(:campaign_content, primary_key: false) do
      add :id, :bigserial, null: false, primary_key: true
      add :reply_to_email, :text
      add :reply_to_name, :text
      add :kind, :text
      add :subject, :text, null: false
      add :text_body, :text, null: false

      add :campaign_id,
          references(:campaigns,
            column: :id,
            name: "campaign_content_campaign_id_fkey",
            type: :bigint,
            prefix: "public"
          )

      add :organization_id,
          references(:organizations,
            column: :id,
            name: "campaign_content_organization_id_fkey",
            type: :uuid,
            prefix: "public"
          )
    end
  end

  def down do
    drop constraint(:campaign_content, "campaign_content_campaign_id_fkey")

    drop constraint(:campaign_content, "campaign_content_organization_id_fkey")

    drop table(:campaign_content)

    drop constraint(:campaign_recepients, "campaign_recepients_campaign_id_fkey")

    drop constraint(:campaign_recepients, "campaign_recepients_organization_id_fkey")

    drop table(:campaign_recepients)

    drop constraint(:campaigns, "campaigns_list_id_fkey")

    drop constraint(:campaigns, "campaigns_organization_id_fkey")

    drop constraint(:campaigns, "campaigns_sender_profile_id_fkey")

    alter table(:campaigns) do
      remove :state
      remove :sender_profile_id
      remove :organization_id
      remove :list_id
      remove :updated_at
      remove :created_at
      remove :deleted?
      remove :active?
      remove :name
    end

    drop constraint(:messages, "messages_campaign_id_fkey")

    drop constraint(:messages, "messages_recepient_id_fkey")

    alter table(:messages) do
      modify :recepient_id, :uuid
      modify :campaign_id, :bigint
    end

    drop table(:campaigns)

    drop_if_exists unique_index(:crm_lists, [:organization_id, :name],
                     name: "crm_lists_unique_list_name_index"
                   )

    drop constraint(:crm_lists, "crm_lists_organization_id_fkey")

    alter table(:crm_lists) do
      remove :organization_id
      remove :updated_at
      remove :created_at
      remove :name
    end

    drop constraint(:crm_people_lists, "crm_people_lists_list_id_fkey")

    alter table(:crm_people_lists) do
      modify :list_id, :bigint
    end

    drop table(:crm_lists)

    drop constraint(:crm_people_lists, "crm_people_lists_person_id_fkey")

    drop table(:crm_people_lists)

    drop constraint(:massmail_events, "massmail_events_message_id_fkey")

    drop table(:massmail_events)

    drop table(:messages)

    alter table(:organizations) do
      remove :updated_at
      remove :created_at
      remove :name
    end

    drop_if_exists unique_index(:people, [:organization_id, :email],
                     name: "people_unique_email_index"
                   )

    drop constraint(:people, "people_organization_id_fkey")

    alter table(:people) do
      modify :organization_id, :uuid
    end

    drop_if_exists unique_index(:sender_profiles, [:organization_id, :title],
                     name: "sender_profiles_unique_name_index"
                   )

    drop constraint(:sender_profiles, "sender_profiles_organization_id_fkey")

    alter table(:sender_profiles) do
      modify :organization_id, :uuid
    end

    drop constraint(:teams, "teams_organization_id_fkey")

    alter table(:teams) do
      modify :organization_id, :uuid
    end

    drop table(:organizations)

    drop table(:people)

    drop constraint(:profiles, "profiles_id_fkey")

    drop table(:profiles)

    drop table(:sender_profiles)

    drop_if_exists unique_index(:subscribers, [:email], name: "subscribers_unique_email_index")

    drop table(:subscribers)

    drop constraint(:teams, "teams_member_id_fkey")

    drop table(:teams)

    drop table(:templates)

    drop table(:tokens)

    drop_if_exists unique_index(:users, [:email], name: "users_unique_email_index")

    drop table(:users)
  end
end
