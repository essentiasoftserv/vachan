<.header>
  Builder UI
  <:actions></:actions>
</.header>

<div class="accordion m-2">
  <div class="accordion-header cursor-pointer flex justify-between items-center p-4 border-b border-gray-300">
    <div class="text-2xl">Content</div>
    <svg class="w-6 h-6 transition-transform" id="content-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
    </svg>
  </div>
  <div class="accordion-body p-4 open">
    <.live_component
      module={VachanWeb.CampaignBuilder.ContentComponent}
      id="content-step"
      current_user={@current_user}
      current_org={@current_org}
      campaign={@campaign}
      live_action={@live_action}
      content={@content}
    >
    </.live_component>
  </div>
</div>

<div class="accordion mt-10">
  <div class="accordion-header cursor-pointer flex justify-between items-center p-4 border-b border-gray-300">
    <div class="text-2xl">Contacts List</div>
    <svg class="w-6 h-6 transition-transform" id="contacts-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
    </svg>
  </div>
  <div class="accordion-body p-4 hidden">
    <div :if={@contact_list}>
      <%= @contact_list.name %>
      <%= @contact_list.people_count %>
    </div>
    <.button :if={@contact_lists != []} phx-click={JS.push("show_modal", value: %{modal: :list_selector})}>
      Select contact list
    </.button>

    <.button phx-click={JS.push("show_modal", value: %{modal: :contact_list_creator})}>
      Add contacts
    </.button>
  </div>
</div>

<div class="accordion mt-10">
  <div class="accordion-header cursor-pointer flex justify-between items-center p-4 border-b border-gray-300">
    <div class="text-2xl">Credentials</div>
    <svg class="w-6 h-6 transition-transform" id="credentials-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
    </svg>
  </div>
  <div class="accordion-body p-4 hidden">
    <.button phx-click={JS.push("show_modal", value: %{modal: :sender_profile_selector})}>
      Select contact list
    </.button>
  </div>
</div>

<div class="mt-10">
  <div class="text-2xl">Send</div>
  <div>Send</div>
</div>

<.modal :if={@modal == :list_selector} id="select_list_modal" show on_cancel={JS.push("hide_modal")}>
  <div>
    <span class="text-xl">Select a list</span>
    <.table id="list_select_table" rows={@contact_lists}>
      <:col :let={list} label="List name"><%= list.name %></:col>
      <:col :let={list} label="People count"><%= list.people_count %></:col>
      <:action :let={list}>
        <.button
          class={if list.people_count == 0, do: "opacity-50 cursor-not-allowed", else: ""}
          phx-click={JS.push("select_list", value: %{list_id: list.id})}
          disabled={list.people_count == 0}
        >
          Select
        </.button>
      </:action>
    </.table>
  </div>
</.modal>




<.modal :if={@modal == :sender_profile_selector} id="select_sender_profile_modal" show on_cancel={JS.push("hide_modal")}>
  <div>
    <span class="text-xl">Select a Sender Profile</span>
    <.table id="select_sender_profile_table" rows={@sender_profiles}>
      <:col :let={sp} label="Sender Profile name"><%= sp.name %></:col>
      <:action :let={sp}>
        <.button phx-click={JS.push("select_sender_profile", value: %{sender_profile_id: sp.id})}>
          Select
        </.button>
      </:action>
    </.table>
  </div>
</.modal>

<.modal :if={@modal == :contact_list_creator} id="contact_list_creator" show on_cancel={JS.push("hide_modal")}>
  <.live_component id="add_contacts_component" module={VachanWeb.CampaignBuilder.AddContact}>
  </.live_component>
</.modal>

<style>
  .accordion-body.hidden {
    display: none;
  }
  .accordion-body.open {
    display: block;
  }
  .accordion-header svg {
    transition: transform 0.3s ease;
  }
  .accordion-header svg.rotate-180 {
    transform: rotate(180deg);
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const accordionHeaders = document.querySelectorAll('.accordion-header');
    
    accordionHeaders.forEach(header => {
      header.addEventListener('click', () => {
        const accordionBody = header.nextElementSibling;
        const accordionIcon = header.querySelector('svg');

        // Close all other accordions
        document.querySelectorAll('.accordion-body').forEach(body => {
          if (body !== accordionBody) {
            body.classList.remove('open');
            body.classList.add('hidden');
          }
        });

        document.querySelectorAll('.accordion-header svg').forEach(icon => {
          if (icon !== accordionIcon) {
            icon.classList.remove('rotate-180');
          }
        });

        // Toggle the clicked accordion
        accordionBody.classList.toggle('open');
        accordionBody.classList.toggle('hidden');
        accordionIcon.classList.toggle('rotate-180');
      });
    });

    // Keep the Content accordion open by default
    const contentAccordion = document.querySelector('.accordion.m-2 .accordion-body');
    const contentIcon = document.querySelector('#content-icon');
    
    if (contentAccordion) {
      contentAccordion.classList.add('open');
      contentAccordion.classList.remove('hidden');
      contentIcon.classList.add('rotate-180');
    }
  });
</script>
<style>
  .accordion-body.hidden {
    display: none;
  }
  .accordion-body.open {
    display: block;
  }
  .accordion-header svg {
    transition: transform 0.3s ease;
  }
  .accordion-header svg.rotate-180 {
    transform: rotate(180deg);
  }
  .accordion-header {
    transition: background-color 0.3s ease;
  }
  .accordion-header:hover {
    background-color: #f0f0f0; /* Lighter shade of black for hover effect */
  }
</style>
